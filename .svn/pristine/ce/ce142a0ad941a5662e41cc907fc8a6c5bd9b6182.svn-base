package Controllers;

import DAO.DAOProduto;
import DAO.DAOUsuario;
import Mapeamentos.Usuario;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;
import javax.validation.Valid;
import org.springframework.stereotype.Controller;
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.model;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;

@Controller
public class UsuariosController {

    @RequestMapping("cadastroUsuarios")
    public String CarregaCadastro(Model model) {
        model.addAttribute("Usuario", new Usuario());
        return "cadastroUsuarios";
    }

    @RequestMapping("salvarUsuario")
    public String salvarUsuario(@ModelAttribute("Usuario") Usuario usuario, Model model) {
        DAOUsuario dao = new DAOUsuario();
        Usuario user = dao.verificaCpf(usuario);
        Usuario user1 = dao.verificaEmail(usuario);

        if (user != null) {
            String str = "cpf ja existente!";
            model.addAttribute("str", str);
            System.out.println("cpf ja existente");
            return "cadastroUsuarios";
        }

        if (user1 != null) {
            String str1 = "email ja existente!";
            model.addAttribute("str1", str1);
            System.out.println("email ja existente");
            return "cadastroUsuarios";
        }

        if (dao.salvarUsuario(usuario)) {

            String mensagem = "Cadastro efetuado com sucesso!";
            model.addAttribute("sucessoCadastro", mensagem);
            return "login";
        } else {
//            String str = "Erro!";
//            model.addAttribute("str", str);
            return "cadastroUsuarios";
        }

    }

    @RequestMapping("login")
    public String CarregaLogin(Model model) {
        model.addAttribute("Usuario", new Usuario());
        return "login";
    }

    @RequestMapping("efetuaLogin")
    public String efetuaLogin(@ModelAttribute("Usuario") Usuario usuario, BindingResult result, HttpSession session, HttpServletRequest request, Model model) {
        DAOUsuario dao = new DAOUsuario();
        Usuario user = dao.buscarLogin(usuario);

        if (user != null) {
            session.setAttribute("usuarioLogado", user);
            String mensagem = "Login efetuado com sucesso!";
            model.addAttribute("mensagemLogin", mensagem);
            if (user.isAdmin()) {
                return "listaProdutos";
            } else {
                return "index";
            }

        } else {
            String mensagem = "Falha no Login!";
            model.addAttribute("mensagemLogin", mensagem);
            return "login";
        }
    }

    @RequestMapping("efetuaLogout")
    public String efetuaLogout(@ModelAttribute("Usuario") Usuario usuario, HttpSession session, Model model) {
        session.removeAttribute("usuarioLogado");
        //String mensagem = "deslogado!";
        //model.addAttribute("mensagem", mensagem);
        return "index";
    }

    @RequestMapping("editarUsuarios")
    public String carregaEditarUsuarios(Model model,HttpSession session,
            @RequestParam(value = "cpf") String cpf) {
        DAOUsuario dao = new DAOUsuario();
        model.addAttribute("Usuario", dao.buscarPeloCpf(cpf));

        return "editarUsuarios";
    }
    
    @RequestMapping("editarUsuario")
    public String editarUsuario(@ModelAttribute("Usuario") Usuario usuario, Model model) {
        DAOUsuario dao = new DAOUsuario();       

        if (dao.salvarUsuario(usuario)) {

            String mensagem = "Dados editados com sucesso!";
            model.addAttribute("sucessoEdicao", mensagem);
            return "index";
        } else {
//            String str = "Erro!";
//            model.addAttribute("str", str);
            return "editarUsuarios";
        }

    }
}
